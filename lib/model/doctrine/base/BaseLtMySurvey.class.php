<?php

/**
 * BaseLtMySurvey
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $survey_id
 * @property integer $user_id
 * @property integer $my_status
 * @property integer $owner_id
 * @property boolean $is_updated
 * @property boolean $is_deadline_past
 * @property boolean $share_with
 * @property LtSurvey $Survey
 * @property sfGuardUser $User
 * @property sfGuardUser $Owner
 * 
 * @method integer     getSurveyId()         Returns the current record's "survey_id" value
 * @method integer     getUserId()           Returns the current record's "user_id" value
 * @method integer     getMyStatus()         Returns the current record's "my_status" value
 * @method integer     getOwnerId()          Returns the current record's "owner_id" value
 * @method boolean     getIsUpdated()        Returns the current record's "is_updated" value
 * @method boolean     getIsDeadlinePast()   Returns the current record's "is_deadline_past" value
 * @method boolean     getShareWith()        Returns the current record's "share_with" value
 * @method LtSurvey    getSurvey()           Returns the current record's "Survey" value
 * @method sfGuardUser getUser()             Returns the current record's "User" value
 * @method sfGuardUser getOwner()            Returns the current record's "Owner" value
 * @method LtMySurvey  setSurveyId()         Sets the current record's "survey_id" value
 * @method LtMySurvey  setUserId()           Sets the current record's "user_id" value
 * @method LtMySurvey  setMyStatus()         Sets the current record's "my_status" value
 * @method LtMySurvey  setOwnerId()          Sets the current record's "owner_id" value
 * @method LtMySurvey  setIsUpdated()        Sets the current record's "is_updated" value
 * @method LtMySurvey  setIsDeadlinePast()   Sets the current record's "is_deadline_past" value
 * @method LtMySurvey  setShareWith()        Sets the current record's "share_with" value
 * @method LtMySurvey  setSurvey()           Sets the current record's "Survey" value
 * @method LtMySurvey  setUser()             Sets the current record's "User" value
 * @method LtMySurvey  setOwner()            Sets the current record's "Owner" value
 * 
 * @package    LexLists
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLtMySurvey extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('my_surveys');
        $this->hasColumn('survey_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('my_status', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('owner_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('is_updated', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_deadline_past', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('share_with', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LtSurvey as Survey', array(
             'local' => 'survey_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as Owner', array(
             'local' => 'owner_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}