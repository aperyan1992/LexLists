<?php

/**
 * BaseLtMySurveyNote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $survey_id
 * @property string $note
 * @property integer $user_id
 * @property LtSurvey $Survey
 * @property sfGuardUser $User
 * 
 * @method integer        getSurveyId()  Returns the current record's "survey_id" value
 * @method string         getNote()      Returns the current record's "note" value
 * @method integer        getUserId()    Returns the current record's "user_id" value
 * @method LtSurvey       getSurvey()    Returns the current record's "Survey" value
 * @method sfGuardUser    getUser()      Returns the current record's "User" value
 * @method LtMySurveyNote setSurveyId()  Sets the current record's "survey_id" value
 * @method LtMySurveyNote setNote()      Sets the current record's "note" value
 * @method LtMySurveyNote setUserId()    Sets the current record's "user_id" value
 * @method LtMySurveyNote setSurvey()    Sets the current record's "Survey" value
 * @method LtMySurveyNote setUser()      Sets the current record's "User" value
 * 
 * @package    LexLists
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLtMySurveyNote extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('my_survey_notes');
        $this->hasColumn('survey_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LtSurvey as Survey', array(
             'local' => 'survey_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}