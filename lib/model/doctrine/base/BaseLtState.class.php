<?php

/**
 * BaseLtState
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $short_code
 * @property Doctrine_Collection $SurveyStates
 * @property Doctrine_Collection $LtSurveyState
 * 
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getShortCode()     Returns the current record's "short_code" value
 * @method Doctrine_Collection getSurveyStates()  Returns the current record's "SurveyStates" collection
 * @method Doctrine_Collection getLtSurveyState() Returns the current record's "LtSurveyState" collection
 * @method LtState             setName()          Sets the current record's "name" value
 * @method LtState             setShortCode()     Sets the current record's "short_code" value
 * @method LtState             setSurveyStates()  Sets the current record's "SurveyStates" collection
 * @method LtState             setLtSurveyState() Sets the current record's "LtSurveyState" collection
 * 
 * @package    LexLists
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLtState extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('states');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('short_code', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('LtSurvey as SurveyStates', array(
             'refClass' => 'LtSurveyState',
             'local' => 'state_id',
             'foreign' => 'survey_id'));

        $this->hasMany('LtSurveyState', array(
             'local' => 'id',
             'foreign' => 'state_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}