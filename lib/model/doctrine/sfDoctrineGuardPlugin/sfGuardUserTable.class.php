<?php

/**
 * sfGuardUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable {

    /**
     * Returns an instance of this class.
     *
     * @return object sfGuardUserTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('sfGuardUser');
    }

    /**
     * Retrieves a sfGuardUser object by username or email_address and is_active flag.
     *
     * @param  string  $username The username
     * @param  boolean $isActive The user's status
     *
     * @return sfGuardUser
     */
    public function retrieveByEmailAddress($email_address, $isActive = true) {
        $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('u')
                ->where('u.email_address = ?', $email_address)
                ->addWhere('u.is_active = ?', $isActive);

        return $query->fetchOne();
    }

    public static function doSelectJoinClient($query) {
        $rootAlias = $query->getRootAlias();

        return $query->select($rootAlias . '.*, c.name')
                        ->leftJoin($rootAlias . '.Client c');
    }

    /**
     * Checking email address for uniqueness
     * 
     * @param string   $email_address       Email address
     * @param integer  $user_id             ID of user
     * 
     * @return sfGuardUser
     */
    public function checkUniqueEmailAddress($email_address, $user_id = false) {
        $q = $this->createQuery('u')
                ->where('u.email_address = ?', $email_address);

        if ($user_id !== false) {
            $q->andWhere('u.id <> ?', $user_id);
        }

        $result = $q->fetchOne();

        return $result;
    }
    
    /**
     * Get list of users
     * 
     * @param bool $is_superuser_flag   Is superuser?
     * 
     * @return array
     */
    public function getUsersList($is_superuser_flag = false) {
        $q = $this->createQuery('u');
        
        if(!$is_superuser_flag) {
            $q->where("u.client_id = ?", sfContext::getInstance()->getUser()->getGuardUser()->getClientId())
                ->andWhere('u.is_client_admin = ?', false);
        }

        $owners = $q->orderBy('u.first_name')->execute();
        
        $owners_array = array();
        if($owners->getFirst()) {
            foreach ($owners as $owner) {
                $email_address = "- - -";
                if($owner->getEmailAddress() != '') {
                    $email_address = $owner->getEmailAddress();
                }
                
                $phone = "- - -";
                if($owner->getPhoneNumber() != '') {
                    $phone = $owner->getPhoneNumber();
                }
                
                $owners_array[$owner->getId()] = $owner->getLastName() . ", " . $owner->getFirstName() . " (Email: " . $email_address . ", Phone: " . $phone . ")";
            }
        }        
        
        return $owners_array;
    }

}
